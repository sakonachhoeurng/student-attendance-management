<?php

namespace AttedanceManagement\UserBundle\Repository;

use AttedanceManagement\UserBundle\Entity\ClassGroup;
use AttedanceManagement\UserBundle\Entity\Subject;
use AttedanceManagement\UserBundle\Entity\User;

/**
 * SubjectGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubjectGroupRepository extends \Doctrine\ORM\EntityRepository
{

	 /**
     * Find all student by filter form
     *
     * @param User $teacher
     * @param Subject|null $subject
     * @param ClassGroup|null $classGroup
     *
     * @return QueryBuilder
     */
    public function findByFilter(
        User $teacher,
        $subject,
        $classGroup
    ) {
        $qb = $this->createQueryBuilder('sg');
        $qb->select('IDENTITY(sg.classGroup)');
        if (!$teacher->hasRole('ROLE_ADMIN')) {
            $qb->andWhere('sg.user = :teacher');
        }

        if ($classGroup !== null) {
            $qb->andWhere('sg.classGroup = :group');
        }

        if ($subject !== null) {
        	$qb->andWhere('sg.subject = :subject');
        }

        return $qb;
    }

    /**
     * Get subject by teacher
     *
     * @return QueryBuilder
     */
    public function findSubjectByTeacher()
    {
    	$qb = $this->createQueryBuilder('sg');
        $qb->select('IDENTITY(sg.subject)');
        $qb->andWhere('sg.user = :teacher');

        return $qb;
    }

    /**
     * Get all subject if admin
     *
     * @return QueryBuilder
     */
    public function getAllSubject()
    {
        $qb = $this->createQueryBuilder('sg');
        $qb->select('IDENTITY(sg.subject)');

        return $qb;
    }

    /**
     * Get group by teacher
     *
     * @return QueryBuilder
     */
    public function findGroupByTeacher()
    {
    	$qb = $this->createQueryBuilder('sg');
        $qb->select('IDENTITY(sg.classGroup)');
        $qb->andWhere('sg.user = :teacher');

        return $qb;
    }

    /**
     * Get all group
     *
     * @return QueryBuilder
     */
    public function getAllGroups()
    {
        $qb = $this->createQueryBuilder('sg');
        $qb->select('IDENTITY(sg.classGroup)');

        return $qb;
    }

    public function findBySubjectTeacherAndGroup(
        User $teacher,
        Subject $subject,
        ClassGroup $group
    ) {
        $qb = $this->createQueryBuilder('sg');
        $qb->where('sg.subject = :subject');
        $qb->andWhere('sg.user = :teacher');
        $qb->andWhere('sg.classGroup = :group');
        $qb->setParameter('teacher', $teacher);
        $qb->setParameter('subject', $subject);
        $qb->setParameter('group', $group);

        return $qb->getQuery()->getOneOrNullResult();
    }
}
